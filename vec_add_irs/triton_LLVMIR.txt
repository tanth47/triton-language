; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define amdgpu_kernel void @add_kernel(ptr addrspace(1) nocapture readonly %0, ptr addrspace(1) nocapture readonly %1, ptr addrspace(1) nocapture writeonly %2) local_unnamed_addr #0 !dbg !4 {
  %4 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %5 = shl i32 %4, 10, !dbg !8
  %6 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !9
  %7 = shl i32 %6, 2, !dbg !9
  %8 = and i32 %7, 1020, !dbg !9
  %9 = or disjoint i32 %8, %5, !dbg !10
  %10 = icmp slt i32 %9, 1024, !dbg !11
  br i1 %10, label %.critedge, label %.critedge2, !dbg !12

.critedge:                                        ; preds = %3
  %11 = or disjoint i32 %9, 3, !dbg !10
  %12 = or disjoint i32 %9, 2, !dbg !10
  %13 = or disjoint i32 %9, 1, !dbg !10
  %14 = sext i32 %9 to i64, !dbg !13
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !13
  %16 = addrspacecast ptr addrspace(1) %15 to ptr, !dbg !12
  %17 = load float, ptr %16, align 16, !dbg !12
  %18 = getelementptr inbounds i8, ptr %16, i64 4, !dbg !12
  %19 = load float, ptr %18, align 4, !dbg !12
  %20 = getelementptr inbounds i8, ptr %16, i64 8, !dbg !12
  %21 = load float, ptr %20, align 8, !dbg !12
  %22 = getelementptr inbounds i8, ptr %16, i64 12, !dbg !12
  %23 = load float, ptr %22, align 4, !dbg !12
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !14
  %25 = addrspacecast ptr addrspace(1) %24 to ptr, !dbg !15
  %26 = sext i32 %11 to i64, !dbg !16
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !16
  %28 = sext i32 %12 to i64, !dbg !16
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !16
  %30 = sext i32 %13 to i64, !dbg !16
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !16
  %32 = getelementptr inbounds i8, ptr %25, i64 12, !dbg !15
  %33 = load float, ptr %32, align 4, !dbg !15
  %34 = fadd float %23, %33, !dbg !17
  %35 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !15
  %36 = load float, ptr %35, align 8, !dbg !15
  %37 = fadd float %21, %36, !dbg !17
  %38 = getelementptr inbounds i8, ptr %25, i64 4, !dbg !15
  %39 = load float, ptr %38, align 4, !dbg !15
  %40 = fadd float %19, %39, !dbg !17
  %41 = load float, ptr %25, align 16, !dbg !15
  %42 = fadd float %17, %41, !dbg !17
  %43 = sext i32 %9 to i64, !dbg !16
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %43, !dbg !16
  store float %42, ptr addrspace(1) %44, align 4, !dbg !18
  store float %40, ptr addrspace(1) %31, align 4, !dbg !18
  store float %37, ptr addrspace(1) %29, align 4, !dbg !18
  store float %34, ptr addrspace(1) %27, align 4, !dbg !18
  br label %.critedge2, !dbg !18

.critedge2:                                       ; preds = %3, %.critedge
  ret void, !dbg !19
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) "amdgpu-flat-work-group-size"="1,256" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "vector_addition.py", directory: "/home/tantrinh/workspace/triton-language")
!4 = distinct !DISubprogram(name: "add_kernel", linkageName: "add_kernel", scope: !3, file: !3, line: 7, type: !5, scopeLine: 7, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 12, column: 29, scope: !4)
!8 = !DILocation(line: 13, column: 25, scope: !4)
!9 = !DILocation(line: 13, column: 51, scope: !4)
!10 = !DILocation(line: 13, column: 38, scope: !4)
!11 = !DILocation(line: 14, column: 21, scope: !4)
!12 = !DILocation(line: 15, column: 16, scope: !4)
!13 = !DILocation(line: 15, column: 24, scope: !4)
!14 = !DILocation(line: 16, column: 24, scope: !4)
!15 = !DILocation(line: 16, column: 16, scope: !4)
!16 = !DILocation(line: 20, column: 21, scope: !4)
!17 = !DILocation(line: 18, column: 12, scope: !4)
!18 = !DILocation(line: 20, column: 30, scope: !4)
!19 = !DILocation(line: 20, column: 4, scope: !4)

